1 opengl 有意把渲染上下文和显示窗口从opengl规范中剥离出来

2 glad作用： 加载opengl的函数，所以在调用任何OpenGL的函数之前我们需要初始化GLAD。目前glfw中提供了opengl3.3的glad，位于deps/glad/gl.h（仅头文件版本）。也就是说目前可以不需要自己去生成glad的代码。

3 3D坐标转为2D坐标的处理过程是由OpenGL的图形渲染管线
	图形渲染管线可以被划分为两个主要部分：第一部分把你的3D坐标转换为2D坐标，第二部分是把2D坐标转变为实际的有颜色的像素。
	图形渲染管线接受一组3D坐标，然后把它们转变为你屏幕上的有色2D像素输出。
	图形渲染管线包括：
		顶点着色器：主要作用是把3D坐标转为另一种3D坐标，同时允许对顶点属性进行处理
		几何着色器
		形状（图元）装配
		光栅化：主要作用是把图元映射成最终屏幕上相应的像素，生成供片段着色器使用的片段
		片段着色器: 主要目的是计算一个像素的最终颜色
		测试与混合
		
		NOTE: OpenGL中的一个片段是OpenGL渲染一个像素所需的所有数据。
		
4 在现代OpenGL中，我们必须定义至少一个顶点着色器和一个片段着色器（因为GPU中没有默认的顶点/片段着色器）

5 opengl标准化设备坐标: OpenGL仅当3D坐标在3个轴（x、y和z）上-1.0到1.0的范围内时才处理它。 

6 通常深度可以理解为z坐标，它代表一个像素在空间中和你的距离，如果离你远就可能被别的像素遮挡，你就看不到它了，它会被丢弃，以节省资源。

7 屏幕坐标和OpenGL标准设备坐标
	屏幕坐标系： 
		基于窗口系统的坐标系。对于大多数窗口系统（如Windows、X11等），屏幕坐标通常是这样的：
			原点：位于屏幕左上角。
			方向：X轴向右增加；Y轴向下增加。
			单位：像素。
			
	OpenGL标准设备坐标：
		原点：位于屏幕中心。
		方向：X轴向右增加；Y轴向上增加；Z轴指向屏幕外。
		单位：归一化的值，范围通常为[-1, 1]。
		
	从NDC坐标到屏幕坐标的转换
		float xScreen = ((xNDC + 1.0f) / 2.0f) * width;
		float yScreen = ((1.0f - yNDC) / 2.0f) * height;
	从屏幕坐标到NDC坐标的转换
		float xNDC = (2.0f * xScreen / width) - 1.0f;
		float yNDC = 1.0f - (2.0f * yScreen / height);

8 VAO作用：
	主要是当需要来回切换绘制不同物体时候，方便绘制。如果没有VAO，那么在来回绘制物体A和B时，需要每次重复把创建VBO那套代码都执行一次。

9 EBO(IBO)作用
	EBO是一个缓冲区，就像一个顶点缓冲区对象一样，它存储 OpenGL 用来决定要绘制哪些顶点的索引。
	比如通过两个三角形绘制一个矩形时候，两个三角形共有6个顶点，但矩形只需要四个顶点。这里就有重复的顶点。浪费资源。